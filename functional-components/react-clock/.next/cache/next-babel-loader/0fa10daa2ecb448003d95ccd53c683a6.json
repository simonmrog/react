{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/simonmrog/simon/programming/github/react-js/functional-components/react-clock/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport DigitalClock from \"../src/components/DigitalClock\";\n\nvar Hello = /*#__PURE__*/function (_React$Component) {\n  _inherits(Hello, _React$Component);\n\n  var _super = _createSuper(Hello);\n\n  function Hello(props) {\n    var _this;\n\n    _classCallCheck(this, Hello);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      time: new Date().toLocaleTimeString()\n    };\n    return _this;\n  }\n\n  _createClass(Hello, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState(function () {\n        return {\n          time: new Date().toLocaleTimeString()\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(DigitalClock, {\n        time: this.state.time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Hello;\n}(React.Component);\n\n;\nexport default Hello;","map":{"version":3,"sources":["/home/simonmrog/simon/programming/github/react-js/functional-components/react-clock/pages/index.js"],"names":["React","DigitalClock","Hello","props","state","time","Date","toLocaleTimeString","setState","interval","setInterval","tick","clearInterval","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AADK,KAAb;AAHiB;AAMlB;;;;2BAEM;AACL,WAAKC,QAAL,CAAc,YAAM;AAClB,eAAQ;AACNH,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,kBAAX;AADA,SAAR;AAGD,OAJD;AAKD;;;wCAEmB;AAAA;;AAClB,WAAKE,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,IAAL,EAAN;AAAA,OAAD,EAAoB,IAApB,CAA3B;AACD;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;;6BAEQ;AACP,aACE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAG,KAAKL,KAAL,CAAWC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;;;EA7BiBL,KAAK,CAACa,S;;AA8BzB;AAED,eAAeX,KAAf","sourcesContent":["import React from \"react\";\n\nimport DigitalClock from \"../src/components/DigitalClock\";\n\nclass Hello extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      time: new Date().toLocaleTimeString()\n    }\n  }\n\n  tick() {\n    this.setState(() => {\n      return ({\n        time: new Date().toLocaleTimeString()\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <DigitalClock time={ this.state.time } />\n    );\n  }\n};\n\nexport default Hello;\n"]},"metadata":{},"sourceType":"module"}